@using P8LibraryWebAPPMVC.Client.Models;
@model LibraryModel

@{
	ViewData["Title"] = "Library";
}


<h1 class="Title">Details</h1>
<div class="Page">
	<div class="content">
		<h3>Details</h3>
			<div class="section">
				<label>Title</label>
			<input type="text" id="name" value="@Model.detailedBook.name" />
			</div>
			<div class="section">
				<label>Author</label>
			<input type="text" id="author" value="@Model.detailedBook.author" />
			</div>
			<div class="section">
				<label>Page number</label>
			<input type="text" id="pages" value="@Model.detailedBook.pages" />
			</div>
			<div class="section">
				<label>Genres</label>
			<input type="text" id="genres" value="@Model.genres" />
			</div>
			<input type="hidden" id="id" value="@Model.detailedBook.id" />
		<div class="content">
			<button onclick="callForUpdate()">Change details</button>
			<a asp-action="Index">Go back to book list</a>
			<a asp-action="Delete">Delete this book</a>
		</div>
	</div>
</div>

<script>
	function callForUpdate() {

		let name = window.document.getElementById("name").value;
		let author = window.document.getElementById("author").value;
		let pages = window.document.getElementById("pages").value;
		let genres = window.document.getElementById("genres").value;
		let id = window.document.getElementById("id").value;

		window.location.href = "/Library/Update?name="+name+"&author="+author+"&pages="+pages+"&genres="+genres+"&id="+id;
	}
</script>


<style>
	.Title {
		display: flex;
		justify-content: space-around;
	}

	.Page {
		display: flex;
		flex-direction: column;
	}

	.content {
		margin: 5px;
	}
</style>